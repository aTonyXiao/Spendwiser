# referenced: https://www.sitepoint.com/configuring-nginx-ssl-node-js/
# and: https://blog.amosti.net/local-reverse-proxy-with-nginx-mkcert-and-docker-compose/
# and: https://www.digitalocean.com/community/tutorials/how-to-secure-a-containerized-node-js-application-with-nginx-let-s-encrypt-and-docker-compose

events {}

http {
    server {
        listen 443 ssl http2;
        listen [::]:443 ssl http2;
        server_name  localhost;

        server_tokens off;

        ssl_certificate  /etc/nginx/ssl/dev.pem;
        ssl_certificate_key /etc/nginx/ssl/dev-key.pem;

        ssl_buffer_size 8k;

        # ref: https://docs.docker.com/registry/recipes/nginx/
        # Recommendations from https://raymii.org/s/tutorials/Strong_SSL_Security_On_nginx.html
        ssl_protocols TLSv1.1 TLSv1.2;
        ssl_ciphers 'EECDH+AESGCM:EDH+AESGCM:AES256+EECDH:AES256+EDH';
        ssl_prefer_server_ciphers on;
        ssl_session_cache shared:SSL:10m;

        ssl_ecdh_curve secp384r1;
        ssl_session_tickets off;

        resolver 8.8.8.8;

        location / {
            proxy_pass http://server:3000;
            
            add_header X-Frame-Options "SAMEORIGIN" always;
            add_header X-XSS-Protection "1; mode=block" always;
            add_header X-Content-Type-Options "nosniff" always;
            add_header Referrer-Policy "no-referrer-when-downgrade" always;
            add_header Content-Security-Policy "default-src * data: 'unsafe-eval' 'unsafe-inline'" always;
        }
    }
}